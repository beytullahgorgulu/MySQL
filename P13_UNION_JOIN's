USE sys;

-- ====================== UNION ======================
 /*  
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    UNION 
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
    
    NOT: UNION operatoru SADECE benzersiz degerleri alir. 
    Benzer verileri almak icin UNION ALL kullanilir.
    
 */
 
 CREATE TABLE kadro(
id int,
isim varchar(50),
sehir varchar(50),
maas int,
sirket varchar(20)
);
    
    
INSERT INTO kadro VALUES(123456789, 'Ali Yilmaz', 'Istanbul', 5500, 'Honda');
INSERT INTO kadro VALUES(234567890, 'Veli Sahin', 'Istanbul', 4500, 'Toyota');
INSERT INTO kadro VALUES(345678901, 'Mehmet Ozturk', 'Ankara', 3500,'Honda');
INSERT INTO kadro VALUES(456789012, 'Mehmet Ozturk', 'Izmir', 6000, 'Ford');
INSERT INTO kadro VALUES(567890123, 'Mehmet Ozturk', 'Ankara', 7000, 'Tofas');
INSERT INTO kadro VALUES(456715012, 'Veli Sahin', 'Ankara', 4500, 'Ford');
INSERT INTO kadro VALUES(123456710, 'Hatice Sahin', 'Bursa', 4500, 'Honda');
INSERT INTO kadro VALUES(345678902, 'Mehmet Ozturk', 'Izmir', 3500,'Honda');   

SELECT * FROM kadro;

-- 1) Honda ve Tofas'ta calisan benzersiz isimdeki personelleri listeleyin

 SELECT isim
 FROM kadro
 WHERE sirket IN('Honda', 'Tofas');
 
 -- DISTINCT COZUM
 SELECT DISTINCT isim
 FROM kadro
 WHERE sirket IN('Honda', 'Tofas');
 
 -- UNION COZUM
 SELECT isim
 FROM kadro
 WHERE sirket = 'Honda'
 
 UNION
 
 SELECT isim
 FROM kadro
 WHERE sirket = 'Tofas';
 
 
 -- Honda, Ford ve Tofas'ta calisan benzersiz isimdeki 
 -- personelleri listeleyin
 
 SELECT isim
 FROM kadro
 WHERE sirket = 'Honda'
 UNION
 SELECT isim
 FROM kadro
 WHERE sirket = 'Tofas'
 UNION
 SELECT isim
 FROM kadro
 WHERE sirket = 'Ford';
 
-- Honda, Ford ve Tofas'ta calisan butun personelleri listeleyin 

 SELECT isim
 FROM kadro
 WHERE sirket = 'Honda'
 UNION ALL
 SELECT isim
 FROM kadro
 WHERE sirket = 'Tofas'
 UNION ALL
 SELECT isim
 FROM kadro
 WHERE sirket = 'Ford';
 
-- Honda, Ford ve Tofas'ta calisan butun personellerin
-- isim maas ve sehir bilgilerini listeleyiniz 

 SELECT isim, maas, sehir
 FROM kadro
 WHERE sirket = 'Honda'
 UNION ALL
 SELECT isim, maas, sehir
 FROM kadro
 WHERE sirket = 'Tofas'
 UNION ALL
 SELECT isim, maas, sehir
 FROM kadro
 WHERE sirket = 'Ford';
 
 -- Maasi 4000'den fazla olan isci isimlerini ve 5000'den fazla
-- maas alinan sehirleri gosteren sorguyu yaziniz
 
 SELECT isim AS isim_sehir
 FROM kadro
 WHERE maas>4000
 UNION
 SELECT sehir
 FROM kadro
 WHERE maas>5000;
 
 -- 5000'den az maas alanlarin , buna ek olarak Honda calisani olmayanlarin 
 -- isim bilgilerini listeleyiniz.
 

 SELECT isim
 FROM kadro
 WHERE maas<5000 
 UNION
 SELECT isim
 FROM kadro
 WHERE NOT sirket = 'Honda';
 
-- Mehmet Ozturk ismindeki personellerin aldigi maaslari ve 
-- Istanbul'daki personellerin maaslarini en yuksekten dusuge gore
-- siralayarak bir tabloda gosteriniz. 

SELECT maas
FROM kadro
WHERE isim='Mehmet Ozturk'
UNION
SELECT maas
FROM kadro
WHERE sehir='Istanbul'
ORDER BY maas DESC;
 
 /*
SELECT (AGGREATE FUNCTION, DISTINCT) AS name
FROM table_name
WHERE condition(LIKE, IN, REGEXP_LIKE,IS NULL, EXISTS, BETWEEN, AND,OR)
GROUP BY
HAVING
ORDER BY (DESC)
LIMIT
*/

-- ============================== JOIN ISLEMLERI ===============================

CREATE TABLE sirket 
(
    sirket_id INT , 
    sirket_isim VARCHAR(20)
);

    INSERT INTO sirket VALUES(100, 'Toyota');
    INSERT INTO sirket VALUES(101, 'Honda');
    INSERT INTO sirket VALUES(102, 'Ford');
    INSERT INTO sirket VALUES(103, 'Hyundai');
    
CREATE TABLE siparisler    
(
    siparis_id INT,
    sirket_id INT, 
    siparis_tarihi DATE
    
);

    INSERT INTO siparisler VALUES(11, 101, '2020-04-17');
    INSERT INTO siparisler VALUES(22, 102, '2020-04-18');
    INSERT INTO siparisler VALUES(33, 103, '2020-04-19');
    INSERT INTO siparisler VALUES(44, 104, '2020-04-20');
    INSERT INTO siparisler VALUES(55, 105, '2020-04-21');

SELECT * FROM sirket;
SELECT * FROM siparisler;


/*=============================== INNER JOIN  ==================================
    
    Syntax
    -----------
    SELECT sutun1,sutun2....sutunN
    FROM tablo1 
    INNER JOIN tablo2
    ON tablo1.sutun = tablo2.sutun;
    
================================================================================*/

-- Iki Tabloda sirket_id'si ayni olanlarin sirket_ismi, siparis_id ve 
-- siparis_tarihleri listeleyen bir sorgu yaziniz.

SELECT sirket.sirket_isim, siparisler.siparis_id, siparisler.siparis_tarihi
FROM sirket
INNER JOIN siparisler
ON siparisler.sirket_id=sirket.sirket_id;




SELECT sirket.sirket_isim, siparisler.siparis_id, siparisler.siparis_tarihi
FROM sirket INNER JOIN siparisler
ON sirket.sirket_id = siparisler.sirket_id;
 
 -- INNER JOIN kullanilirken sadece iki tabloda ortak olan degerleri alir.
 -- Bu sorgu icin sirket tablosundan (sirket_id= 101, 102, 103) siparisler tablosunda da 
 -- oldugu icin o degerlerin sonucunu getirdi.
 
 /*=============================== LEFT JOIN  ==================================
    
    LEFT JOIN, 1. tablodan (sol tablo) SELECT ile ifade edilen sutunlara ait tum
    satirlari getirir. 
    Ancak, diger tablodan sadece ON ile belirtilen kosula uyan satirlari getirir. 
    
    1) Left Join'de ilk tablodaki tum record'lar gosterilir.
    2) Ilk tablodaki datalara 2.tablodan gelen ek datalar 
       varsa bu ek datalar ortak datalar icin gosterilir, 
       ancak ortak olmayan datalar icin o kisimlar bos kalir.
    3) Ilk yazdiginiz Tablonun tamamini aldigi icin hangi tabloyu
       istedigimize karar verip once onu yazmaliyiz. 
        
    Syntax
    -----------
    SELECT sutun1,sutun2....sutunN
    FROM tablo1 
    LEFT JOIN tablo2
    ON tablo1.sutun = tablo2.sutun;
    
==============================================================================*/  
 
 /* -----------------------------------------------------------------------------
  ORNEK2: sirket tablosundaki tum sirketleri ve bu sirketlere ait olan 
  siparis_id ve siparis_tarihleri listeleyen bir sorgu yaziniz.
------------------------------------------------------------------------------*/

SELECT sirket.sirket_isim, siparisler.siparis_id, siparisler.siparis_tarihi
FROM sirket
LEFT JOIN siparisler
ON sirket.sirket_id = siparisler.sirket_id;
 
 -- FROM komutundan sonra LEFT JOIN'de ilk tablodaki tum satirlar gosterilir.
 -- ILK tablodan sonra ON kosulunda ne yaziyorsa onun sonuclari gosterilir.
 -- Kosula uymayan satirlar NULL olarak gosterilir.

